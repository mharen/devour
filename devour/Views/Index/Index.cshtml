@using devour
@{
    ViewBag.Title = "Just Mouse Around...";
}
<script type="text/javascript">
    $(function () {

        var board = $.connection.board;

        board.client.pong = function(id, value) {
            $('#cell' + id).toggleClass('enabled', (value % 2) === 1);
        };

        board.client.init = function (b) {
            if(b==null) {
                $('#board td.enabled').removeClass('.enabled');
                console.log('reset');
                return;
            }
            
            for (var i = 0; i < b.length; ++i) {
                board.client.pong(i, b[i]);
            }
        };

        board.client.toast = function (message) {
            var $message = $('<div class="message"/>').text(message);
            $('body').append($message.fadeIn(250).delay(2000).fadeOut(250));
        };
        
        var $board = $('#board');
        var k = 0;
        for (var i = 0; i < @(Board.BoardHeight); ++i) {
            var $tr = $("<tr/>");
            for (var j = 0; j < @Board.BoardWidth; ++j) {
                var $cell = $("<td/>").attr('id', "cell" + k++);
                $tr.append($cell);
            }
            $board.append($tr);
        }

        $('#reset').on('click', function() { board.server.reset(); });

        // Start the connection
        $.connection.hub
            .start()
            .pipe(function() {
                $board.on('mouseenter', 'td', function(e) {
                    var $c = $(e.target);
                    var id = $c.attr('id').substring(4);
                    $c.toggleClass('enabled');
                    board.server.ping(id);
                });
            });

        var connectionCounts = 0;
        $.connection.hub.stateChanged(function(e) {
            var message = null; 

            switch (e.newState) {
                case $.signalR.connectionState.connected:
                    if(connectionCounts> 0) {
                        message= "Aaaaand we're back!";  
                    } 
                    ++connectionCounts;
                    break;
                case $.signalR.connectionState.reconnecting:
                    message = "Reconnecting...";
                    break;
                case $.signalR.connectionState.disconnected:
                    message = "Lost connection! :(";
                    break;
            }
            if(message != null) {
                board.client.toast(message);
            }
        });
    });
</script>
<style>
    html, body, #board {
        margin: 0;
        padding: 0;
        width: 100%;
        height: 100%;
        background-color: #666;
    }

    body {
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

    #board {
        empty-cells: show;
        border-spacing: 0;
    }

        #board .enabled {
            background-color: #dde;
            -webkit-transition: background-color 100ms linear;
            -moz-transition: background-color 100ms linear;
            -o-transition: background-color 100ms linear;
            -ms-transition: background-color 100ms linear;
            transition: background-color 100ms linear;
        }

    #reset, #about {
        position: fixed;
        font-size: 150%;
        background-color: rgba(255,255,255,.75);
        top: 5px;
        padding: 2px 5px;
    }

    #reset {
        left: 5px;
    }

    #about {
        right: 5px;
    }

    .message {
        padding-top: 150px;
        position: fixed;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(255,255,255,.50);
        font-size: 36px;
        font-family: Georgia;
        text-align: center;
        vertical-align: middle;
    }
</style>
<button id="reset">Reset</button>
<table id="board">
</table>
<div id="about"><a href="http://blog.wassupy.com/search/label/SignalR">About</a></div>
